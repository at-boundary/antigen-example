openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
  description: REST API for e-commerce platform with payments, orders, products, and users

servers:
  - url: http://localhost:8089
    description: WireMock server

security:
  - BearerAuth: []

paths:
  /api/v1/payments:
    post:
      summary: Create a payment
      operationId: createPayment
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  /api/v1/payments/{paymentId}:
    get:
      summary: Get payment details
      operationId: getPayment
      security:
        - BearerAuth: []
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailsResponse'

  /api/v1/orders:
    post:
      summary: Create an order
      operationId: createOrder
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

    get:
      summary: Get list of orders
      operationId: listOrders
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

  /api/v1/products/{productId}:
    get:
      summary: Get product details
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

  /api/v1/users:
    get:
      summary: Get list of users
      operationId: listUsers
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: role
          in: query
          schema:
            type: string
            enum: [user, admin, moderator]
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'

  /api/v1/users/{userId}:
    get:
      summary: Get user details
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    CreatePaymentRequest:
      type: object
      required:
        - amount
        - currency
        - orderId
        - paymentMethod
      properties:
        amount:
          type: integer
          description: Amount in cents
        currency:
          type: string
          example: usd
        orderId:
          type: string
        paymentMethod:
          type: object
          required:
            - type
            - cardId
          properties:
            type:
              type: string
              enum: [card, bank_account]
            cardId:
              type: string

    PaymentResponse:
      type: object
      required:
        - id
        - status
        - amount
        - currency
        - customer
        - paymentMethod
      properties:
        id:
          type: string
        status:
          type: string
          enum: [pending, succeeded, failed]
        amount:
          type: integer
        currency:
          type: string
        customer:
          type: object
          required:
            - email
          properties:
            email:
              type: string
        paymentMethod:
          type: object
          required:
            - card
          properties:
            card:
              type: object
              required:
                - last4
              properties:
                last4:
                  type: string

    PaymentDetailsResponse:
      type: object
      required:
        - id
        - status
        - amount
        - currency
        - customer
        - billing
        - paymentMethod
        - refunds
      properties:
        id:
          type: string
        status:
          type: string
          enum: [pending, succeeded, failed]
        amount:
          type: integer
        currency:
          type: string
        customer:
          type: object
          required:
            - name
          properties:
            name:
              type: string
        billing:
          type: object
          required:
            - address
          properties:
            address:
              type: object
              required:
                - city
              properties:
                city:
                  type: string
        paymentMethod:
          type: object
          required:
            - card
          properties:
            card:
              type: object
              required:
                - brand
              properties:
                brand:
                  type: string
        refunds:
          type: object
          required:
            - total
            - data
          properties:
            total:
              type: integer
            data:
              type: array
              items:
                type: object

    CreateOrderRequest:
      type: object
      required:
        - customerId
        - items
        - shipping
      properties:
        customerId:
          type: string
        items:
          type: array
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: string
              quantity:
                type: integer
        shipping:
          type: object
          required:
            - address
          properties:
            address:
              type: object
              required:
                - line1
                - city
                - state
                - postalCode
                - country
              properties:
                line1:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postalCode:
                  type: string
                country:
                  type: string

    OrderResponse:
      type: object
      required:
        - id
        - status
        - customer
        - totals
        - items
      properties:
        id:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, cancelled]
        customer:
          type: object
          required:
            - email
          properties:
            email:
              type: string
        totals:
          type: object
          required:
            - total
          properties:
            total:
              type: integer
        items:
          type: array
          items:
            type: object

    OrderListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - customer
              - items
            properties:
              id:
                type: string
              customer:
                type: object
                required:
                  - email
                properties:
                  email:
                    type: string
              items:
                type: array
                items:
                  type: object
        pagination:
          type: object
          required:
            - limit
            - offset
            - total
          properties:
            limit:
              type: integer
            offset:
              type: integer
            total:
              type: integer

    ProductResponse:
      type: object
      required:
        - id
        - name
        - price
        - inventory
        - specifications
        - ratings
        - metadata
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: object
          required:
            - amount
            - currency
          properties:
            amount:
              type: integer
            currency:
              type: string
        inventory:
          type: object
          required:
            - quantity
          properties:
            quantity:
              type: integer
        specifications:
          type: object
          required:
            - brand
            - features
          properties:
            brand:
              type: string
            features:
              type: array
              items:
                type: string
        ratings:
          type: object
          required:
            - average
          properties:
            average:
              type: number
              format: float
        metadata:
          type: object
          required:
            - isFeatured
          properties:
            isFeatured:
              type: boolean

    UserResponse:
      type: object
      required:
        - id
        - username
        - email
        - profile
        - preferences
        - subscription
        - metadata
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        profile:
          type: object
          required:
            - firstName
            - lastName
          properties:
            firstName:
              type: string
            lastName:
              type: string
        preferences:
          type: object
          required:
            - notifications
          properties:
            notifications:
              type: object
              required:
                - sms
              properties:
                sms:
                  type: boolean
        subscription:
          type: object
          required:
            - features
          properties:
            features:
              type: array
              items:
                type: string
        metadata:
          type: object
          required:
            - loginCount
          properties:
            loginCount:
              type: integer

    UserListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - role
              - profile
            properties:
              role:
                type: string
                enum: [user, admin, moderator]
              profile:
                type: object
                properties:
                  avatar:
                    type: string
                    nullable: true
        pagination:
          type: object
          required:
            - page
            - limit
            - total
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
